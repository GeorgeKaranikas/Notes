                ----TCP Ports 111/2049


--Network File System (NFS) is a network file system developed by Sun Microsystems and has the same 
purpose as SMB. Its purpose is to access file systems over a network as if they were local. 
However, it uses an entirely different protocol. NFS is used between Linux and Unix systems. 
This means that NFS clients cannot communicate directly with SMB servers. 
NFS is an Internet standard that governs the procedures in a distributed file system.



NFS is based on the Open Network Computing Remote Procedure Call (ONC-RPC/SUN-RPC) protocol exposed on TCP and UDP ports 111, which uses External Data Representation (XDR) for the system-independent exchange of data. The NFS protocol has no mechanism for authentication or authorization. Instead, authentication is completely shifted to the RPC protocol's options. The authorization is taken from the available information of the file system where the server is responsible for translating the user information supplied by the client to that of the file system and converting the corresponding authorization information as correctly as possible into the syntax required by UNIX.

The most common authentication isYes you need first to mount the nfs and then you will find a lot of .txt files, in one of them there are the credentials for RDP. via UNIX UID/GID and group memberships, which is why this syntax is most likely to be applied to the NFS protocol. One problem is that the client and server do not necessarily have to have the same mappings of UID/GID to users and groups, and the server does not need to do anything further. No further checks can be made on the part of the server. This is why NFS should only be used with this authentication method in trusted networks.


              -----/etc/exports

     /etc/exports file contains a table of physical filesystems on an NFS server accessible by the clients

    
                ---enum 
            
            $ sudo nmap -sV -sC -p 111,2049 x.x.x.x
            (will propably use rpcinfo nse script)
            you can also use the --script nfs* switch

                ----Show Available NFS Shares

            $ showmount -e x.x.x.x

                ----Mounting NFS Share
            
            $ mkdir local_dir
            $ sudo mount -t {target_nfs} x.x.x.x:/ ./{local_dir}/ -o nolock

        There we will have the opportunity to access the rights and the usernames and groups to whom the shown and viewable files belong. Because once we have the usernames, group names, UIDs, and GUIDs, we can create them on our system and adapt them to the NFS share to view and modify the files.


        !!It is important to note that if the root_squash option is set, we cannot edit the files with 0 uid/gid even as root.


       We can also use NFS for further escalation. For example, if we have access to the system via SSH and want to read files from another folder that a specific user can read, we would need to upload a shell to the NFS share that has the SUID of that user and then run the shell via the SSH user.

       After we have done all the necessary steps and obtained the information we need, we can unmount the NFS share.
    
    $ sudo umount ./target-NFS


